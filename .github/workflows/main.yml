name: Package Foundry VTT Module

on:
    push:
        branches: [main]
        tags: ["v*"]
    pull_request:
        branches: [main]

permissions:
    contents: write
    actions: read

jobs:
    Release-Module:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Needed for tagging

            - name: Check for release tag in commit message
              id: check_release
              run: |
                  COMMIT_MSG="${{ github.event.head_commit.message }}"
                  echo "Commit message: $COMMIT_MSG"

                  # Check if commit message contains [release:vX.X.X]
                  if [[ "$COMMIT_MSG" =~ \[release:v([0-9]+\.[0-9]+\.[0-9]+)\] ]]; then
                    VERSION="${BASH_REMATCH[1]}"
                    echo "Found release tag: v$VERSION"
                    echo "should_release=true" >> $GITHUB_OUTPUT
                    echo "version_tag=v$VERSION" >> $GITHUB_OUTPUT
                  else
                    echo "No release tag found in commit message"
                    echo "should_release=false" >> $GITHUB_OUTPUT
                  fi

            - name: Create and push tag
              if: steps.check_release.outputs.should_release == 'true' && github.ref_type != 'tag'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git tag ${{ steps.check_release.outputs.version_tag }}
                  git push origin ${{ steps.check_release.outputs.version_tag }}

            - name: Get module info
              id: module_info
              run: |
                  echo "name=$(jq -r '.name' module.json)" >> $GITHUB_OUTPUT
                  echo "version=$(jq -r '.version' module.json)" >> $GITHUB_OUTPUT
                  echo "title=$(jq -r '.title' module.json)" >> $GITHUB_OUTPUT

            - name: Package module
              run: |
                  mkdir -p dist
                  zip -r "dist/${{ steps.module_info.outputs.name }}-${{ steps.module_info.outputs.version }}.zip" \
                    . \
                    -x ".*" \
                    "node_modules/*" \
                    "dist/*" \
                    "*.git*" \
                    "*.md" \
                    "package*.json"

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.module_info.outputs.name }}-${{ steps.module_info.outputs.version }}
                  path: dist/${{ steps.module_info.outputs.name }}-${{ steps.module_info.outputs.version }}.zip

            - name: Debug Release Info
              run: |
                  echo "GitHub ref: ${{ github.ref }}"
                  echo "GitHub ref type: ${{ github.ref_type }}"
                  echo "Is tag: ${{ github.ref_type == 'tag' }}"
                  echo "Should release: ${{ steps.check_release.outputs.should_release }}"
                  echo "Version tag: ${{ steps.check_release.outputs.version_tag }}"

            - name: Create Release
              if: github.ref_type == 'tag' || steps.check_release.outputs.should_release == 'true'
              uses: softprops/action-gh-release@v1
              with:
                  files: dist/${{ steps.module_info.outputs.name }}-${{ steps.module_info.outputs.version }}.zip
                  name: ${{ steps.module_info.outputs.title }} ${{ steps.module_info.outputs.version }}
                  tag_name: ${{ steps.check_release.outputs.version_tag || github.ref_name }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Workflow Summary
              run: |
                  echo "### ðŸ“¦ Foundry VTT Module Packaging Complete" >> $GITHUB_STEP_SUMMARY
                  echo "### Module Information" >> $GITHUB_STEP_SUMMARY
                  echo "- **Name:** ${{ steps.module_info.outputs.name }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Title:** ${{ steps.module_info.outputs.title }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Version:** ${{ steps.module_info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Package:** ${{ steps.module_info.outputs.name }}-${{ steps.module_info.outputs.version }}.zip" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  if [[ "${{ github.ref_type }}" == "tag" ]] || [[ "${{ steps.check_release.outputs.should_release }}" == "true" ]]; then
                    echo "### âœ… Release Created" >> $GITHUB_STEP_SUMMARY
                    echo "A new release has been created with the packaged module attached." >> $GITHUB_STEP_SUMMARY
                  else
                    echo "### ðŸ“‹ Artifact Uploaded" >> $GITHUB_STEP_SUMMARY
                    echo "Module package has been uploaded as a workflow artifact." >> $GITHUB_STEP_SUMMARY
                    echo "**Note:** To create a release, include \`[release:vX.X.X]\` in your commit message or push a tag manually." >> $GITHUB_STEP_SUMMARY
                  fi
